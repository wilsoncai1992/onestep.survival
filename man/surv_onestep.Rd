% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_surv_onestep.R
\name{surv_onestep}
\alias{surv_onestep}
\title{One-step TMLE estimator for survival curve}
\usage{
surv_onestep(dat, dW = rep(1, nrow(dat)), g.SL.Lib = c("SL.glm", "SL.step",
  "SL.glm.interaction"), Delta.SL.Lib = c("SL.mean", "SL.glm", "SL.gam",
  "SL.earth"), ht.SL.Lib = c("SL.mean", "SL.glm", "SL.gam", "SL.earth"),
  epsilon.step = 1e-05, max.iter = 1000, tol = 1/nrow(dat),
  T.cutoff = NULL, verbose = FALSE, ...)
}
\arguments{
\item{dat}{A data.frame with columns T.tilde, delta, A, W. T.tilde = min(T, C) is either the failure time of censor time, whichever happens first. 'delta'= I(T <= C) is the indicator of whether we observe failure time. A is binary treatment. W is baseline covariates. All columns with character "W" will be treated as baseline covariates.}

\item{dW}{A binary vector specifying dynamic treatment (as a function output of W)}

\item{g.SL.Lib}{A vector of string. SuperLearner library for fitting treatment regression}

\item{Delta.SL.Lib}{A vector of string. SuperLearner library for fitting censoring regression}

\item{ht.SL.Lib}{A vector of string. SuperLearner library for fitting conditional hazard regression}

\item{epsilon.step}{numeric. step size for one-step recursion}

\item{max.iter}{integer. maximal number of recursion for one-step}

\item{tol}{numeric. tolerance for optimization}

\item{T.cutoff}{int. Enforce randomized right-censoring to the observed data, so that don't estimate survival curve beyond a time point. Useful when time horizon is long.}

\item{verbose}{boolean. When TRUE, plot the initial fit curve, and output the objective function value during optimzation}

\item{...}{additional options for plotting initial fit curve}
}
\value{
Psi.hat A numeric vector of estimated treatment-specific survival curve

T.uniq A vector of descrete time points where Psi.hat take values (have same length as Psi.hat)

params A list of estimation parameters set by user

variables A list of data summary statistics

initial_fit A list of initial fit values (hazard, g_1, Delta)
}
\description{
one-step TMLE estimate of the treatment specific survival curve. Under right-censored data
}
\details{
options to ADD:
SL.formula: the covariates to include in SL
}
\examples{
library(simcausal)
D <- DAG.empty()

D <- D +
    node("W", distr = "rbinom", size = 1, prob = .5) +
    node("A", distr = "rbinom", size = 1, prob = .15 + .5*W) +
    node("Trexp", distr = "rexp", rate = 1 + .5*W - .5*A) +
    node("Cweib", distr = "rweibull", shape = .7 - .2*W, scale = 1) +
    node("T", distr = "rconst", const = round(Trexp*100,0)) +
    node("C", distr = "rconst", const = round(Cweib*100, 0)) +
    node("T.tilde", distr = "rconst", const = ifelse(T <= C , T, C)) +
    node("delta", distr = "rconst", const = ifelse(T <= C , 1, 0))
setD <- set.DAG(D)

dat <- sim(setD, n=3e2)

library(dplyr)
# only grab ID, W's, A, T.tilde, Delta
Wname <- grep('W', colnames(dat), value = TRUE)
dat <- dat[,c('ID', Wname, 'A', "T.tilde", "delta")]

dW <- rep(1, nrow(dat))
onestepfit <- surv_onestep(dat = dat,
                            dW = dW,
                            verbose = FALSE,
                            epsilon.step = 1e-3,
                            max.iter = 1e3)
}
